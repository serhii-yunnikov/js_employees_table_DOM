{"version":3,"sources":["scripts/main.js"],"names":["heading","document","querySelector","firstElementChild","headingItems","querySelectorAll","tableBody","tableRows","children","setDataAttribut","collection","slice","dataset","type","forEach","item","setAttribute","salaryToNumber","cell","split","join","numberToSalary","elem","Number","toLocaleString","tableSort","column","index","indexOf","data","sorted","sort","rowA","rowB","one","innerText","two","first","second","order","localeCompare","remove","append","addEventListener","e","target","closest","contains","classList","unit","add","form","createElement","autocomplete","body","insertBefore","lastChild","inputs","inputsArray","map","toUpperCase","insertAdjacentHTML","age","salary","selectLabel","htmlFor","select","qa","optionsValues","optionCollection","insertAdjacentText","button","containsNumber","str","some","includes","transformUpperCase","person","nameArr","charAt","addRow","preventDefault","newTr","className","FormData","dataInput","Object","fromEntries","entries","innerHTML","name","position","office","length","notification","wrongNameMessage","wrongPosition","smallAgeMessage","bigAgeMessage","success","reset","alertTable","style","top","right","textAlign","display","alignItems","justifyContent","color","transition","wrongSalaryMessage","message","opacity","setTimeout","element","addInput","inputCollection","input","getElementsByTagName","cloneNode","firstChild","getAttribute","focus","cellInput","activeCell","indexCell","findIndex","validationNameData","value","modAction","validationPositionData","validationOfficeData","validationAgeData","validationSalaryData","itemMod","inputMod","cellMod","code"],"mappings":";AAAA,aAiWA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/VA,IAAMA,EAAUC,SAASC,cAAc,SAASC,kBAC1CC,EAAmBJ,EAAAA,EAAQK,iBAAiB,OAC5CC,EAAYL,SAASC,cAAc,SACnCK,EAAgBD,EAAAA,EAAUE,UAIhC,SAASC,EAAgBC,GACJA,IADgB,EAChBA,EAAAA,EAAAA,EAAWC,MAAM,EAAG,IADJ,IACQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACpCC,QAAQC,KAAO,QAFa,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAInCH,EAAW,GAAGE,QAAQC,KAAO,SAC7BH,EAAW,GAAGE,QAAQC,KAAO,SAP/BT,EAAaU,QAAQ,SAAAC,GAAQA,OAAAA,EAAKC,aAAa,QAAS,YAUxDP,EAAgBL,GAEhB,IAAMa,EAAiB,SAACC,GACfA,OAAAA,EAAKP,MAAM,GAAGQ,MAAM,KAAKC,KAAK,KAGjCC,EAAiB,SAACC,GACXC,MAAAA,IAAAA,OAAAA,OAAOD,GAAME,mBAG1B,SAASC,EAAUC,GACXC,IAAAA,EAAQvB,EAAawB,QAAQF,GAC7BG,EAAOH,EAAOd,QAsBdkB,EAAS,EAAIxB,EAAUE,UAAUuB,KApBlB,SAACC,EAAMC,GACpBC,IAAAA,EAAMF,EAAKxB,SAASmB,GAAOQ,UAC3BC,EAAMH,EAAKzB,SAASmB,GAAOQ,UAC7BE,EAAQH,EACRI,EAASF,EAOLP,OALW,QAAfA,EAAKU,QACPF,EAAQD,EACRE,EAASJ,GAGHL,EAAKhB,MACN,IAAA,OACIwB,OAAAA,EAAMG,cAAcF,GACxB,IAAA,SACIrB,OAAAA,EAAeoB,GAASpB,EAAeqB,GAC3C,IAAA,SACID,OAAAA,EAAQC,KAKrB/B,EAAUO,QAAQ,SAAAC,GAAQA,OAAAA,EAAK0B,WAC/BX,EAAOhB,QAAQ,SAAAC,GAAQT,OAAAA,EAAUoC,OAAO3B,KAEnCc,EAAKU,OAAwB,SAAfV,EAAKU,MAGtBV,EAAKU,MAAQ,OAFbV,EAAKU,MAAQ,MAMjBvC,EAAQ2C,iBAAiB,QAAS,SAACC,GAC3B7B,IAAAA,EAAO6B,EAAEC,OAAOC,QAAQ,WAEzB/B,GAASf,EAAQ+C,SAAShC,IAI/BU,EAAUV,KAGZR,EAAUO,QAAQ,SAAAC,GAAQA,OAAAA,EAAKC,aAAa,QAAS,SAErDV,EAAUqC,iBAAiB,QAAS,SAACC,GAC7B7B,IAAAA,EAAO6B,EAAEC,OAAOC,QAAQ,QAE1B,GAAC/B,GAAST,EAAUyC,SAAShC,GAA7B,CAIeR,IAPsB,EAOtBA,EAAAA,EAAAA,GAPsB,IAOX,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBW,IAAAA,EAAmB,EAAA,MACxBA,EAAK8B,UAAUD,SAAS,YAC1B7B,EAAK8B,UAAUP,OAAO,UAClBvB,EAAAA,EAAKV,UAAUM,QAAQ,SAAAmC,GAAQA,OAAAA,EAAKD,UAAUP,OAAO,mBAVpB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAczC1B,EAAKiC,UAAUE,IAAI,UAEfnC,EAAAA,EAAKP,UAAUM,QAAQ,SAAAI,GAAQA,OAAAA,EAAK8B,UAAUE,IAAI,oBAGxD,IAAMC,EAAOlD,SAASmD,cAAc,QAEpCD,EAAKnC,aAAa,QAAS,qBAC3BmC,EAAKE,aAAe,MACpBpD,SAASqD,KAAKC,aAAaJ,EAAMlD,SAASqD,KAAKE,WAE/C,IAAMC,EAAS,CAAC,OAAQ,WAAY,MAAO,UAErCC,EAAcD,EAAOE,IAAI,SAAA5C,GACZA,MAAAA,iBAAAA,OAAAA,EAASA,MAAAA,OAAAA,EAAK,GAAG6C,cAAgB7C,EAAKJ,MAAM,GAC9CI,oBAAAA,OAAAA,EAA2BA,wBAAAA,OAAAA,EAC7BA,mBAAAA,OAAAA,EAHoB,gBAMnC2C,EAAY5C,QAAQ,SAAAC,GAAQoC,OAAAA,EAAKU,mBAAmB,YAAa9C,KAEjE,IAAM+C,EAAM7D,SAASC,cAAc,QAC7B6D,EAAS9D,SAASC,cAAc,WAEtC4D,EAAIjD,KAAO,SACXkD,EAAOlD,KAAO,SAEd,IAAMmD,EAAc/D,SAASmD,cAAc,SAE3CY,EAAYC,QAAU,SAEtB,IAAMC,EAASjE,SAASmD,cAAc,UAEtCc,EAAOlD,aAAa,KAAM,UAC1BkD,EAAOlD,aAAa,OAAQ,UAC5BkD,EAAOtD,QAAQuD,GAAK,SACpBD,EAAOlD,aAAa,WAAY,IAEhC,IAAMoD,EAAgB,CAAC,QAAS,YAAa,SAC3C,WAAY,YAAa,iBACrBC,EAAmBD,EAAcT,IAAI,SAAA5C,GACrBA,MAAAA,oBAAAA,OAAAA,EAASA,MAAAA,OAAAA,EADgB,eAI/CsD,EAAiBvD,QAAQ,SAAAC,GACvBmD,OAAAA,EAAOL,mBAAmB,YAAa9C,KAEzCiD,EAAYtB,OAAOwB,GAEnBf,EAAKI,aAAaS,EAAab,EAAK3C,SAAS,IAE7CwD,EAAYM,mBAAmB,aAAc,WAE7C,IAAMC,EAAStE,SAASmD,cAAc,UAQtC,SAASoB,EAAeC,GACfA,OAAAA,EAAItD,MAAM,IAAIuD,KAAK,SAAA3D,GAAQ,MAAA,aAAa4D,SAAS5D,KAP1DwD,EAAO1D,KAAO,SAEd0D,EAAOpC,UAAY,gBAEnBgB,EAAKT,OAAO6B,GAMZ,IAAMK,EAAqB,SAACC,GAGnBC,OAFSD,EAAO1D,MAAM,KAEdwC,IAAI,SAAA5C,GAAQA,OAAAA,EAAKgE,OAAO,GAAGnB,cAAgB7C,EAAKJ,MAAM,KAClES,KAAK,MAGJ4D,EAAS,SAACpC,GACdA,EAAEqC,iBAEIC,IAAAA,EAAQjF,SAASmD,cAAc,MAErC8B,EAAMC,UAAY,MAEZtD,IAAAA,EAAO,IAAIuD,SAASjC,GACpBkC,EAAYC,OAAOC,YAAY1D,EAAK2D,WAUtCH,OARJH,EAAMO,UACIb,eAAAA,OAAAA,EAAmBS,EAAUK,MAC7Bd,qBAAAA,OAAAA,EAAmBS,EAAUM,UAC7BN,qBAAAA,OAAAA,EAAUO,OACVP,qBAAAA,OAAAA,EAAUvB,IACVzC,qBAAAA,OAAAA,EAAegE,EAAUtB,QALnC,aAQIsB,EAAUK,KAAKG,OAAS,GAAKrB,EAAea,EAAUK,MACjDI,EAAaC,EAAkB,SAGpCV,EAAUM,SAASE,QAAU,EACxBC,EAAaE,EAAe,SAGjCX,EAAUvB,IAAM,GACXgC,EAAaG,EAAiB,SAGnCZ,EAAUvB,IAAM,GACXgC,EAAaI,EAAe,UAGrCJ,EAAaK,EAAS,WAEtB7F,EAAUoC,OAAOwC,QACjB/B,EAAKiD,UAGPjD,EAAKR,iBAAiB,SAAUqC,GAEhC,IAAMqB,EAAapG,SAASmD,cAAc,OAE1CiD,EAAWC,MAAMC,IAAM,MACvBF,EAAWC,MAAME,MAAQ,SACzBH,EAAWC,MAAMX,SAAW,QAC5BU,EAAWC,MAAMG,UAAY,SAC7BJ,EAAWC,MAAMI,QAAU,OAC3BL,EAAWC,MAAMK,WAAa,SAC9BN,EAAWC,MAAMM,eAAiB,SAClCP,EAAWC,MAAMO,MAAQ,UACzBR,EAAWzF,QAAQuD,GAAK,eACxBkC,EAAWC,MAAMQ,WAAa,cAC9B7G,SAASqD,KAAKZ,OAAO2D,GAErB,IAAMJ,EAAkB,yCAClBC,EAAgB,uCAChBH,EAAmB,2BACnBC,EAAgB,+BAChBe,EAAqB,6BACrBZ,EAAU,8BAEVL,EAAe,SAACkB,EAASnG,GAQ7BwF,EAAWlB,UAA4BtE,gBAAAA,OAAAA,GACvCwF,EAAWZ,UAAgCuB,oBAAAA,OAAAA,EAA3C,QACAX,EAAWC,MAAME,MAAQ,MACzBH,EAAWC,MAAMW,QAAU,IAE3BC,WAZe,WACPC,IAAAA,EAAUlH,SAASC,cAAkBW,IAAAA,OAAAA,IAE3CsG,EAAQb,MAAME,MAAQ,SACtBW,EAAQb,MAAMW,QAAU,KAQP,SAGrB,SAASG,EAASlG,EAAMS,GAChB0F,IAEAC,EAFkB,EAAIrH,SAASsH,qBAAqB,UACvD5D,IAAI,SAAA5C,GAAQA,OAAAA,EAAKZ,oBACUwB,GAAO6F,WAAU,IAEjC,IAAV7F,EACF2F,EAAMtG,aAAa,QAAYC,GAAAA,OAAAA,EAAeC,EAAKiB,aAEnDmF,EAAMtG,aAAa,QAAYE,GAAAA,OAAAA,EAAKiB,YAEtCmF,EAAMnC,UAAY,aAClBjE,EAAKwB,OAAO4E,GACZpG,EAAKuG,WAAWhF,SAEF,IAAVd,IACarB,EAAUJ,cAA2BgB,aAAAA,OAAAA,EAAKf,kBACtDuH,aAAa,SADhB,OAGO1G,aAAa,WAAY,IAElCf,SAASC,cAAc,eAAeyH,QAGxCrH,EAAUqC,iBAAiB,WAAY,SAACC,GAChCgF,IAAAA,EAAYhF,EAAEC,OAAOC,QAAQ,gBAC7B+E,EAAa5H,SAASC,cAAc,qBAEtC,GAAC0H,GAActH,EAAUyC,SAAS6E,GAAlC,CAIAC,GACFA,EAAW7E,UAAUP,OAAO,oBAE9BmF,EAAUzC,WAAa,QAEjB2C,IAAAA,EAAY,EAAI7H,SAASC,cAAc,eAAeM,UACzDuH,UAAU,SAAAhH,GAAQA,MAAmB,qBAAnBA,EAAKoE,YAE1BiC,EAASxE,EAAEC,OAAQiF,MAGrB,IAAME,EAAqB,SAAC9G,EAAMoG,GAC5BA,GAAAA,EAAMW,MAAMpC,OAAS,GAAKrB,EAAe8C,EAAMW,OAC1CnC,OAAAA,EAAaC,EAAkB,SAExC7E,EAAKiB,UAAYyC,EAAmB0C,EAAMW,OAC1CC,EAAUhH,EAAMoG,IAGZa,EAAyB,SAACjH,EAAMoG,GACpCpG,EAAKiB,UAAYyC,EAAmB0C,EAAMW,OAC1CC,EAAUhH,EAAMoG,IAGZc,EAAuB,SAAClH,EAAMoG,GAClCpG,EAAKiB,UAAemF,GAAAA,OAAAA,EAAMW,OAC1BC,EAAUhH,EAAMoG,IAGZe,EAAoB,SAACnH,EAAMoG,GAC3BA,OAAAA,EAAMW,MAAQ,GACTnC,EAAaG,EAAiB,SAGnCqB,EAAMW,MAAQ,GACTnC,EAAaI,EAAe,UAErChF,EAAKiB,UAAemF,GAAAA,OAAAA,EAAMW,YAC1BC,EAAUhH,EAAMoG,KAGZgB,EAAuB,SAACpH,EAAMoG,GAC9BA,GAAAA,EAAMW,OAAS,EACVnC,OAAAA,EAAaiB,EAAoB,SAE1C7F,EAAKiB,UAAed,GAAAA,OAAAA,EAAeiG,EAAMW,QACzCC,EAAUhH,EAAMoG,IAGlB,SAASY,EAAUhH,EAAMoG,GACvBA,EAAM7E,SACNvB,EAAK8B,UAAUP,OAAO,oBAEjB6E,EAAMW,QACT/G,EAAKiB,UAAemF,GAAAA,OAAAA,EAAMI,aAAa,WAI3C,IAAMa,EAAU,WACRC,IAAAA,EAAWvI,SAASC,cAAc,eAClCuI,EAAUxI,SAASC,cAAc,qBAEnC,GAACsI,GAAalI,EAAUyC,SAASyF,GAI1BA,OAAAA,GAAAA,OAAAA,EAAS9C,OACb,IAAA,OACIsC,OAAAA,EAAmBS,EAASD,GAChC,IAAA,WACIL,OAAAA,EAAuBM,EAASD,GACpC,IAAA,SACIJ,OAAAA,EAAqBK,EAASD,GAClC,IAAA,MACIH,OAAAA,EAAkBI,EAASD,GAC/B,IAAA,SACIF,OAAAA,EAAqBG,EAASD,KAI3ClI,EAAUqC,iBAAiB,OAAQ4F,GAAS,GAE5CjI,EAAUqC,iBAAiB,UAAW,SAACC,GACtB,UAAXA,EAAE8F,MAGNH","file":"main.09ddb175.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst heading = document.querySelector('thead').firstElementChild;\nconst headingItems = [...heading.querySelectorAll('th')];\nconst tableBody = document.querySelector('tbody');\nconst tableRows = [...tableBody.children];\n\nheadingItems.forEach(item => item.setAttribute('class', 'column'));\n\nfunction setDataAttribut(collection) {\n  for (const item of collection.slice(0, 3)) {\n    item.dataset.type = 'text';\n  }\n  collection[3].dataset.type = 'number';\n  collection[4].dataset.type = 'salary';\n}\n\nsetDataAttribut(headingItems);\n\nconst salaryToNumber = (cell) => {\n  return cell.slice(1).split(',').join('');\n};\n\nconst numberToSalary = (elem) => {\n  return `$${Number(elem).toLocaleString()}`;\n};\n\nfunction tableSort(column) {\n  const index = headingItems.indexOf(column);\n  const data = column.dataset;\n\n  const callbackSort = (rowA, rowB) => {\n    const one = rowA.children[index].innerText;\n    const two = rowB.children[index].innerText;\n    let first = one;\n    let second = two;\n\n    if (data.order === 'asc') {\n      first = two;\n      second = one;\n    }\n\n    switch (data.type) {\n      case 'text':\n        return first.localeCompare(second);\n      case 'salary':\n        return salaryToNumber(first) - salaryToNumber(second);\n      case 'number':\n        return first - second;\n    }\n  };\n  const sorted = [...tableBody.children].sort(callbackSort);\n\n  tableRows.forEach(item => item.remove());\n  sorted.forEach(item => tableBody.append(item));\n\n  if (!data.order || data.order === 'desc') {\n    data.order = 'asc';\n  } else {\n    data.order = 'desc';\n  }\n}\n\nheading.addEventListener('click', (e) => {\n  const item = e.target.closest('.column');\n\n  if (!item || !heading.contains(item)) {\n    return;\n  }\n\n  tableSort(item);\n});\n\ntableRows.forEach(item => item.setAttribute('class', 'row'));\n\ntableBody.addEventListener('click', (e) => {\n  const item = e.target.closest('.row');\n\n  if (!item || !tableBody.contains(item)) {\n    return;\n  }\n\n  for (const cell of tableRows) {\n    if (cell.classList.contains('active')) {\n      cell.classList.remove('active');\n      [...cell.children].forEach(unit => unit.classList.remove('cell-active'));\n    }\n  }\n\n  item.classList.add('active');\n\n  [...item.children].forEach(cell => cell.classList.add('cell-active'));\n});\n\nconst form = document.createElement('form');\n\nform.setAttribute('class', 'new-employee-form');\nform.autocomplete = 'off';\ndocument.body.insertBefore(form, document.body.lastChild);\n\nconst inputs = ['name', 'position', 'age', 'salary'];\n\nconst inputsArray = inputs.map(item =>\n  `<label for = \"${item}\">${item[0].toUpperCase() + item.slice(1)}:\\\n  <input name=\"${item}\" type=\"text\" id = \"${item}\" \\\n  data-qa = \"${item}\"></label>`\n);\n\ninputsArray.forEach(item => form.insertAdjacentHTML('beforeend', item));\n\nconst age = document.querySelector('#age');\nconst salary = document.querySelector('#salary');\n\nage.type = 'number';\nsalary.type = 'number';\n\nconst selectLabel = document.createElement('label');\n\nselectLabel.htmlFor = 'office';\n\nconst select = document.createElement('select');\n\nselect.setAttribute('id', 'office');\nselect.setAttribute('name', 'office');\nselect.dataset.qa = 'office';\nselect.setAttribute('required', '');\n\nconst optionsValues = ['Tokyo', 'Singapore', 'London',\n  'New York', 'Edinburgh', 'San Francisco'];\nconst optionCollection = optionsValues.map(item =>\n  `<option data-id=\"${item}\">${item}</option>`\n);\n\noptionCollection.forEach(item =>\n  select.insertAdjacentHTML('beforeend', item));\n\nselectLabel.append(select);\n\nform.insertBefore(selectLabel, form.children[2]);\n\nselectLabel.insertAdjacentText('afterbegin', 'Office:');\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\n\nbutton.innerText = 'Save to table';\n\nform.append(button);\n\nfunction containsNumber(str) {\n  return str.split('').some(item => '0123456789'.includes(item));\n}\n\nconst transformUpperCase = (person) => {\n  const nameArr = person.split(' ');\n\n  return nameArr.map(item => item.charAt(0).toUpperCase() + item.slice(1))\n    .join(' ');\n};\n\nconst addRow = (e) => {\n  e.preventDefault();\n\n  const newTr = document.createElement('tr');\n\n  newTr.className = 'row';\n\n  const data = new FormData(form);\n  const dataInput = Object.fromEntries(data.entries());\n\n  newTr.innerHTML = `\n      <td>${transformUpperCase(dataInput.name)}</td>\n      <td>${transformUpperCase(dataInput.position)}</td>\n      <td>${dataInput.office}</td>\n      <td>${dataInput.age}</td>\n      <td>${numberToSalary(dataInput.salary)}</td>\n  `;\n\n  if (dataInput.name.length < 4 || containsNumber(dataInput.name)) {\n    return notification(wrongNameMessage, 'error');\n  }\n\n  if (dataInput.position.length <= 0) {\n    return notification(wrongPosition, 'error');\n  }\n\n  if (dataInput.age < 18) {\n    return notification(smallAgeMessage, 'error');\n  }\n\n  if (dataInput.age > 90) {\n    return notification(bigAgeMessage, 'error');\n  }\n\n  notification(success, 'success');\n\n  tableBody.append(newTr);\n  form.reset();\n};\n\nform.addEventListener('submit', addRow);\n\nconst alertTable = document.createElement('div');\n\nalertTable.style.top = '5px';\nalertTable.style.right = '-300px';\nalertTable.style.position = 'fixed';\nalertTable.style.textAlign = 'center';\nalertTable.style.display = 'flex';\nalertTable.style.alignItems = 'center';\nalertTable.style.justifyContent = 'center';\nalertTable.style.color = '#5A5A5A';\nalertTable.dataset.qa = 'notification';\nalertTable.style.transition = 'all 1s ease';\ndocument.body.append(alertTable);\n\nconst smallAgeMessage = 'Sorry, you are too young for this game';\nconst bigAgeMessage = 'Sorry, you are too old for this game';\nconst wrongNameMessage = 'Please, enter valid name';\nconst wrongPosition = 'Please, enter valid position';\nconst wrongSalaryMessage = 'Please, enter valid salary';\nconst success = 'Employee successfully added';\n\nconst notification = (message, type) => {\n  const adjust = () => {\n    const element = document.querySelector(`.${type}`);\n\n    element.style.right = '-300px';\n    element.style.opacity = '0';\n  };\n\n  alertTable.className = `notification ${type}`;\n  alertTable.innerHTML = `<p class=\"title\">${message}</p>`;\n  alertTable.style.right = '5px';\n  alertTable.style.opacity = '1';\n\n  setTimeout(adjust, '2800');\n};\n\nfunction addInput(cell, index) {\n  const inputCollection = [...document.getElementsByTagName('label')]\n    .map(item => item.firstElementChild);\n  const input = inputCollection[index].cloneNode(true);\n\n  if (index === 4) {\n    input.setAttribute('value', `${salaryToNumber(cell.innerText)}`);\n  } else {\n    input.setAttribute('value', `${cell.innerText}`);\n  }\n  input.className = 'cell-input';\n  cell.append(input);\n  cell.firstChild.remove();\n\n  if (index === 2) {\n    const option = tableBody.querySelector(`[data-id=\"${cell.firstElementChild\n      .getAttribute('value')}\"]`);\n\n    option.setAttribute('selected', '');\n  }\n  document.querySelector('.cell-input').focus();\n}\n\ntableBody.addEventListener('dblclick', (e) => {\n  const cellInput = e.target.closest('.cell-active');\n  const activeCell = document.querySelector('.cell-active--mod');\n\n  if (!cellInput || !tableBody.contains(cellInput)) {\n    return;\n  }\n\n  if (activeCell) {\n    activeCell.classList.remove('cell-active--mod');\n  }\n  cellInput.className += '--mod';\n\n  const indexCell = [...document.querySelector('.row.active').children]\n    .findIndex(item => item.className === 'cell-active--mod');\n\n  addInput(e.target, indexCell);\n});\n\nconst validationNameData = (cell, input) => {\n  if (input.value.length < 4 || containsNumber(input.value)) {\n    return notification(wrongNameMessage, 'error');\n  }\n  cell.innerText = transformUpperCase(input.value);\n  modAction(cell, input);\n};\n\nconst validationPositionData = (cell, input) => {\n  cell.innerText = transformUpperCase(input.value);\n  modAction(cell, input);\n};\n\nconst validationOfficeData = (cell, input) => {\n  cell.innerText = `${input.value}`;\n  modAction(cell, input);\n};\n\nconst validationAgeData = (cell, input) => {\n  if (input.value < 18) {\n    return notification(smallAgeMessage, 'error');\n  }\n\n  if (input.value > 90) {\n    return notification(bigAgeMessage, 'error');\n  }\n  cell.innerText = `${input.value}`;\n  modAction(cell, input);\n};\n\nconst validationSalaryData = (cell, input) => {\n  if (input.value <= 0) {\n    return notification(wrongSalaryMessage, 'error');\n  }\n  cell.innerText = `${numberToSalary(input.value)}`;\n  modAction(cell, input);\n};\n\nfunction modAction(cell, input) {\n  input.remove();\n  cell.classList.remove('cell-active--mod');\n\n  if (!input.value) {\n    cell.innerText = `${input.getAttribute('value')}`;\n  }\n}\n\nconst itemMod = () => {\n  const inputMod = document.querySelector('.cell-input');\n  const cellMod = document.querySelector('.cell-active--mod');\n\n  if (!inputMod || !tableBody.contains(inputMod)) {\n    return;\n  }\n\n  switch (`${inputMod.name}`) {\n    case 'name':\n      return validationNameData(cellMod, inputMod);\n    case 'position':\n      return validationPositionData(cellMod, inputMod);\n    case 'office':\n      return validationOfficeData(cellMod, inputMod);\n    case 'age':\n      return validationAgeData(cellMod, inputMod);\n    case 'salary':\n      return validationSalaryData(cellMod, inputMod);\n  }\n};\n\ntableBody.addEventListener('blur', itemMod, true);\n\ntableBody.addEventListener('keydown', (e) => {\n  if (e.code !== 'Enter') {\n    return;\n  }\n  itemMod();\n});\n"]}